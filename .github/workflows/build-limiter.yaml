name: Build Limiter
on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'limiter/**'

permissions: 
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: container-training.limiter

jobs:
    build:
      runs-on: ubuntu-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: |
          dotnet restore limiter/src/limiter.csproj
      - name: Build
        run: |
          dotnet build --no-restore limiter/src/limiter.csproj
      - name: Publish
        run: |
          dotnet publish -c release -r linux-x64 --no-self-contained -o limiter/amd64 limiter/src/limiter.csproj
      - name: Publish
        run: |
          dotnet publish -c release -r linux-arm64 --no-self-contained -o limiter/arm64 limiter/src/limiter.csproj
  
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
           images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}
           tags: |
             type=raw,value=app
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./limiter
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
  