name: Build Healthcheck
on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'healthcheck/**'

permissions: 
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: container-training.healthcheck

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Restore dependencies
      run: |
        dotnet restore healthcheck/src/Healthcheck.csproj
    - name: Build
      run: |
        dotnet build --no-restore healthcheck/src/Healthcheck.csproj
    - name: Publish
      run: |
        dotnet publish -c release -r linux-x64 --no-self-contained -o healthcheck/amd64 healthcheck/src/Healthcheck.csproj
    - name: Publish
      run: |
        dotnet publish -c release -r linux-arm64 --no-self-contained -o healthcheck/arm64 healthcheck/src/Healthcheck.csproj

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
         images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}
         tags: |
          type=raw,value=1.0.0
          type=raw,value=latest
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./healthcheck
        provenance: false
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

